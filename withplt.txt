
build/test:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 e1 2f 00 00 	mov    0x2fe1(%rip),%rax        # 3ff0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <OPENSSL_init_ssl@plt-0x10>:
    1020:	ff 35 92 2f 00 00    	push   0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 94 2f 00 00    	jmp    *0x2f94(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <OPENSSL_init_ssl@plt>:
    1030:	ff 25 92 2f 00 00    	jmp    *0x2f92(%rip)        # 3fc8 <OPENSSL_init_ssl@OPENSSL_3.0.0>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <SSL_write@plt>:
    1040:	ff 25 8a 2f 00 00    	jmp    *0x2f8a(%rip)        # 3fd0 <SSL_write@OPENSSL_3.0.0>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .text:

0000000000001050 <main>:
    1050:	48 83 ec 08          	sub    $0x8,%rsp
    1054:	31 f6                	xor    %esi,%esi
    1056:	31 ff                	xor    %edi,%edi
    1058:	e8 d3 ff ff ff       	call   1030 <OPENSSL_init_ssl@plt>
    105d:	31 d2                	xor    %edx,%edx
    105f:	31 f6                	xor    %esi,%esi
    1061:	31 ff                	xor    %edi,%edi
    1063:	e8 d8 ff ff ff       	call   1040 <SSL_write@plt>
    1068:	31 c0                	xor    %eax,%eax
    106a:	48 83 c4 08          	add    $0x8,%rsp
    106e:	c3                   	ret
    106f:	90                   	nop

0000000000001070 <_start>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	31 ed                	xor    %ebp,%ebp
    1076:	49 89 d1             	mov    %rdx,%r9
    1079:	5e                   	pop    %rsi
    107a:	48 89 e2             	mov    %rsp,%rdx
    107d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1081:	50                   	push   %rax
    1082:	54                   	push   %rsp
    1083:	45 31 c0             	xor    %r8d,%r8d
    1086:	31 c9                	xor    %ecx,%ecx
    1088:	48 8d 3d c1 ff ff ff 	lea    -0x3f(%rip),%rdi        # 1050 <main>
    108f:	ff 15 4b 2f 00 00    	call   *0x2f4b(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.34>
    1095:	f4                   	hlt
    1096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    109d:	00 00 00 
    10a0:	48 8d 3d 69 2f 00 00 	lea    0x2f69(%rip),%rdi        # 4010 <__TMC_END__>
    10a7:	48 8d 05 62 2f 00 00 	lea    0x2f62(%rip),%rax        # 4010 <__TMC_END__>
    10ae:	48 39 f8             	cmp    %rdi,%rax
    10b1:	74 15                	je     10c8 <_start+0x58>
    10b3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fe8 <_ITM_deregisterTMCloneTable@Base>
    10ba:	48 85 c0             	test   %rax,%rax
    10bd:	74 09                	je     10c8 <_start+0x58>
    10bf:	ff e0                	jmp    *%rax
    10c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10c8:	c3                   	ret
    10c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d0:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:	48 8d 35 32 2f 00 00 	lea    0x2f32(%rip),%rsi        # 4010 <__TMC_END__>
    10de:	48 29 fe             	sub    %rdi,%rsi
    10e1:	48 89 f0             	mov    %rsi,%rax
    10e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10e8:	48 c1 f8 03          	sar    $0x3,%rax
    10ec:	48 01 c6             	add    %rax,%rsi
    10ef:	48 d1 fe             	sar    %rsi
    10f2:	74 14                	je     1108 <_start+0x98>
    10f4:	48 8b 05 fd 2e 00 00 	mov    0x2efd(%rip),%rax        # 3ff8 <_ITM_registerTMCloneTable@Base>
    10fb:	48 85 c0             	test   %rax,%rax
    10fe:	74 08                	je     1108 <_start+0x98>
    1100:	ff e0                	jmp    *%rax
    1102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1108:	c3                   	ret
    1109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1110:	f3 0f 1e fa          	endbr64
    1114:	80 3d f5 2e 00 00 00 	cmpb   $0x0,0x2ef5(%rip)        # 4010 <__TMC_END__>
    111b:	75 33                	jne    1150 <_start+0xe0>
    111d:	55                   	push   %rbp
    111e:	48 83 3d b2 2e 00 00 	cmpq   $0x0,0x2eb2(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1125:	00 
    1126:	48 89 e5             	mov    %rsp,%rbp
    1129:	74 0d                	je     1138 <_start+0xc8>
    112b:	48 8b 3d d6 2e 00 00 	mov    0x2ed6(%rip),%rdi        # 4008 <__dso_handle>
    1132:	ff 15 a0 2e 00 00    	call   *0x2ea0(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1138:	e8 63 ff ff ff       	call   10a0 <_start+0x30>
    113d:	c6 05 cc 2e 00 00 01 	movb   $0x1,0x2ecc(%rip)        # 4010 <__TMC_END__>
    1144:	5d                   	pop    %rbp
    1145:	c3                   	ret
    1146:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    114d:	00 00 00 
    1150:	c3                   	ret
    1151:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1158:	00 00 00 00 
    115c:	0f 1f 40 00          	nopl   0x0(%rax)
    1160:	f3 0f 1e fa          	endbr64
    1164:	e9 67 ff ff ff       	jmp    10d0 <_start+0x60>

Disassembly of section .fini:

000000000000116c <_fini>:
    116c:	f3 0f 1e fa          	endbr64
    1170:	48 83 ec 08          	sub    $0x8,%rsp
    1174:	48 83 c4 08          	add    $0x8,%rsp
    1178:	c3                   	ret
